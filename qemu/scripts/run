#!/usr/bin/env bash

vm_pid=$$
echo "vm_pid: $vm_pid"
tpm_pid=`cat tpm_socket.pid`
kill -9 $tpm_pid
nbd_pid=`cat nbd_socket.pid`
kill -9 $nbd_pid

vm_id="01"
guest_os="windows_"
guest_ver="10_"
vm_name=$guest_os$guest_ver$vm_id
mac_address="$vm_id:16:3e:ff:fe"
disk0="target-disk.qcow2"
disk1="win11.iso"
uuid=`uuidgen`

nohup qemu-nbd --socket=/tmp/nbd-socket ./$disk0 > nbd.socket.log &
echo $! > nbd_socket.pid
nohup swtpm socket --tpmstate dir=/tmp/mytpm1 --ctrl type=unixio,path=/tmp/mytpm1/swtpm-sock --log level=20 --tpm2 > swtpm.socket.log &
echo $! > tpm_socket.pid

qemu-system-x86_64 -D vm_name.$vm_id.error.log \
 -machine type=q35,accel=kvm,igd-passthru=on \
  -uuid $uuid \
  -name "vm_windows10_${vm_id}" \
  -smp sockets=1,cores=6,threads=1,maxcpus=6 \
   -cpu host,kvm=off,check \
   -m 16G \
 -bios    /storage/install/newest/qemu/build/pc-bios/bios-256k.bin \
 -chardev socket,id=chrtpm,path=/tmp/mytpm1/swtpm-sock \
 -tpmdev emulator,id=tpm0,chardev=chrtpm \
 -device tpm-tis,tpmdev=tpm0 \
 -boot "menu=on,order=d" \
  -cdrom "win11.iso" \
  -blockdev node-name=node-TargetDisk,driver=qcow2,file.locking=off,file.driver=file,file.node-name=file,file.filename=$disk0 \
   -device virtio-blk,drive=node-TargetDisk,id=virtio0 \
 -device ioh3420,addr=1c.0,multifunction=on,port=1,chassis=1,id=root.1 \
 -device vfio-pci,host=01:00.0,bus=root.1,addr=00.0,multifunction=on,x-vga=on,romfile=/storage/install/newest/rom/Asus.RTX3050Mobile.4096.210423.rom \
 -device vfio-pci,host=01:00.1,bus=root.1,addr=00.1 \

-device STOP
NOW ...
exit 1
 -net "nic,model=virtio,macaddr=${mac_address}:${vm_id}" \
 -net "tap,ifname=tap0,script=no,downscript=no" \
 -device virtio-serial \
 -chardev spicevmc,id=vdagent,name=vdagent \
 -device virtserialport,chardev=vdagent,name=com.redhat.spice.0 \
 -rtc clock=host,base=localtime \
 -device intel-hda \
 -monitor stdio \
 -qmp unix:/tmp/qmp-socket,server=on,wait=off \
 -incoming tcp:localhost:6666 \
 -hdb nbd+unix://?socket=/tmp/nbd-socket \
 -spice gl=on \
 -device qxl-vga \
 -display spice-app \
 -vga qxl \

echo "------ start vm $ -"
echo "code: $?"
exit 0
