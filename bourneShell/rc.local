#!/usr/bin/env bash

#----------------------------------------------------------------------------

p="/usr/bin/echo "

$p "
#====================================================== .initialisation.start
#---------------------------------------------------------------------- .rc.d
"
cat <<'EOF'
           _..._
         .'     '.
        /  _   _  \
        | (o)_(o) |
         \(     ) /
         //'._.'\ \
        //   .   \ \
       ||   .     \ \
       |\   :     / |
       \ `) '   (`  /_
     _)``".____,.'"` (_
     )     )'--'(     (
      '---`      `---`   :: rc.local
EOF
$p "
#----------------------------------------------------------------------------
#------------------------------------------------------------- .kernel.tuning
"
#```
echo "9223372036854775807" > /proc/sys/kernel/shmmax
#```
$p "
#--------------------------------------------------------------- .ramfs.setup
"
#```
cacheRamfs='/mnt/cacheRamfs'
mkdir -p $cacheRamfs
mount -t ramfs -o size=3G cacheRamfs $cacheRamfs
chown -R izgfox:kvm /mnt/cacheRamfs
chmod -R 700 /mnt/cacheRamfs/
ln -s /home/izgfox/.cache /mnt/cacheRamfs/
#```
$p "
#----------------------------------------------------------------------------
#------------------------------------------------------------- .network.setup
"
#```
echo                  "nameserver 8.8.8.8" > /etc/resolv.conf
echo                                   "1" > /proc/sys/net/ipv4/ip_forward

    if=/sbin/ifconfig
    ov=/usr/sbin/openvpn
    ov_md="$ov --mktun --dev"
    br=/usr/sbin/brctl
    interface_ethernet_name=eth0
      et_name=$interface_ethernet_name
    interface_bridge_name=br0
      br_name=$interface_bridge_name
    interface_ethernet_address="0.0.0.0"
      et_addr=$interface_ethernet_address
    interface_bridge_address="10.10.20.1"
      br_addr=$interface_bridge_address
    interface_bridge_netmask="255.255.255.0"
      br_mask=$interface_bridge_netmask
#```
#*--- ethernet.interface ::
#```
$if $interface_ethernet_name    down
$if $interface_ethernet_name       \
    $interface_ethernet_address   up
#```
#*--- bridge.interface.setup ::
#```
$br addbr $interface_bridge_name
$br setfd $interface_bridge_name   0
$if       $interface_bridge_name   \
$interface_bridge_address netmask  \
$interface_bridge_netmask promisc up

$ov_md tap0 --user  izgfox
$ov_md tap1 --user  izgfox
$ov_md tap2 --user `id -un`
$ov_md tap3 --user `id -un`
#*                    ...
$ov_md tap9 --user  izgfox

$br addif br0 eth0
$br addif br0 tap0
$br addif br0 tap1
$br addif br0 tap9

$if  br0 up
$if tap0 up
$if tap1 up
$if tap2 up
$if tap3 up
$if tap9 up

iptables --flush
iptables -t nat -F
iptables -X
iptables -Z
iptables -P INPUT ACCEPT
iptables -P OUTPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -t nat -A POSTROUTING -s 10.10.20.0/24 -j MASQUERADE
$if br0:1 10.10.20.20 up
#```
$p "
#----------------------------------------------------------------------------
#---------------------------------------------------------------- .wifi.setup
"
#```
$if wlan0 0.0.0.0 down
$if wlan0 up
rm -rf /var/run/wpa_supplicant/wlan0
dhclient wlan0 &
#```
$p "
#----------------------------------------------------------------------------
#---------------------------------------------------------- .rsync.home.start
"
#```
rm -rf /storage/backup/home/izgfox/.cache/mozilla
time rsync -avz /storage/backup/home/izgfox /home/ > /tmp/izgfox.rsync.log
#```
$p "
#------------------------------------------------------- .rsync.home.conplete
"
#```
#----------------------------------------------------------------------------
updatedb &
#```
$p "
#----------------------------------------------------------------------------
#--------------------------------------------------------- .wiFi.screen.start"
su - root -c "/usr/bin/screen -dmS wiFi bash -lc 'wpa_supplicant -Dnl80211 -i wlan0 -c /etc/wpa_supplicant.conf; exec bash'"
$p "
-----------------------------------------------------------------------------
------------------------------------------------------------------- .neofetch
"
#```
neofetch
#```
$p "
-----------------------------------------------------------------------------
------------------------------------------------------ .qt.kde.plasma.wayland
                             w.land                                    
-----------------------------------------------------------------------------
"
#$p "
#================================================================ .dbus.launch
#export \
#$(dbus-launch) \
#&& export \
#XDG_RUNTIME_DIR=/mnt/cacheRamfs/ && \
#dbus-run-session startplasma-wayland
#============================================================================="
#mkdir -p /dev/shm/kde && chown -R izgfox /dev/shm/kde
#export XDG_RUNTIME_DIR=/dev/shm/kde
#su -c "export $(dbus-launch) && export XDG_RUNTIME_DIR=/home/izgfox/xdg \
#&& kwin_wayland --xwayland && dbus-run-session startplasma-wayland --drm" izgfox
#kwin_wayland --xwayland
#QT_QPA_PLATFORM=wayland kwrite
#sudo su -c 'XDG_RUNTIME_DIR=/dev/shm/kdecd && cd /home/izgfox' izgfox -l
#echo "
#export $(dbus-launch).
#dbus-run-session startplasma-wayland --drm
#modprobe vfio
#modprobe vfio_iommu_type1
#modprobe vfio_pci
#modprobe vfio_virqfd
#modprobe vhost-net
###
#echo "0000:01:00.0" > /sys/bus/pci/devices/0000\:01\:00.0/driver/unbind
#echo "0000:01:00.1" > /sys/bus/pci/devices/0000\:01\:00.1/driver/unbind
#echo "0000:01:00.0" > /sys/bus/pci/drivers/vfio-pci/bind
#echo "0000:01:00.1" > /sys/bus/pci/drivers/vfio-pci/bind
###
#/etc/rc.d/rc.bumblebeed start



